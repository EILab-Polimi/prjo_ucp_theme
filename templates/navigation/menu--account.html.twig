{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
{# {{ dump(sb_admin.profile_name) }} #}
{# {{ dump(sb_admin.profile_picture) }} #}

{# {% set username = sb_admin.profile_name %} #}

{{ menus.build_menu(items, attributes, 0, sb_admin) }}

{% macro build_menu(items, attributes, menu_level, sb_admin) %}

  {% import _self as menus %}
  {% if items %}

    {% if menu_level == 0 and sb_admin.profile_id != 0 %}
    {# {{ dump(username) }} #}

     <!--  -->
     <div {{ attributes.addClass('navbar-nav mr-auto no-arrow') }}>
      <li >
          <a class="dropdown-toggle nav-link" data-toggle="dropdown" aria-expanded="true" href="#">
            <span class="d-none d-lg-inline mr-2 text-gray-600 small">{{ sb_admin.profile_name }}</span>
            <img class="border rounded-circle img-profile" src=" {{sb_admin.profile_picture}} ">
          </a>
        <ul class="dropdown-menu dropdown-menu-right shadow">
          {% for item in items %}
            {{ menus.add_link(item, attributes, menu_level) }}
          {% endfor %}
        </ul>
      </li>
    </div>

    {% else %}
      <ul {{ attributes.addClass(['nav navbar-nav']) }} >
        {% for item in items %}
          {{ menus.add_link_btn(item, attributes, menu_level) }}
        {% endfor %}
      </ul>
    {% endif %}

  {% endif %}
{% endmacro %}

{% macro add_link(item, attributes, menu_level) %}
  {% import _self as menus %}
  {%
    set list_item_classes = [
    'nav-item',
    item.is_expanded ? 'dropdown'
  ]
  %}
  {%
    set link_class = [
    'nav-item',
    'nav-link',
    item.in_active_trail ? 'active',
    menu_level == 0 and (item.is_expanded or item.is_collapsed) ? 'dropdown-toggle',
  ]
  %}
  {%
    set toggle_class = [
  ]
  %}
  <li{{ item.attributes.addClass(list_item_classes) }}>
    {% if menu_level == 0 and item.below %}
      {{ link(item.title, item.url, { 'class': link_class, 'data-toggle' : 'dropdown', 'title': ('Expand menu' | t) ~ ' ' ~ item.title }) }}
      {{ menus.build_menu(item.below, attributes, menu_level + 1) }}
    {% else %}
      {{ link(item.title, item.url, { 'class': link_class }) }}
    {% endif %}
  </li>
{% endmacro %}

{% macro add_link_btn(item, attributes, menu_level) %}
  {% import _self as menus %}
  {%
    set list_item_classes = [
    'nav-item',
    item.is_expanded ? 'dropdown'
  ]
  %}
  {%
    set link_class = [
    'nav-item',
    'nav-link',
    'btn',
    'btn-primary',
    item.in_active_trail ? 'active',
    menu_level == 0 and (item.is_expanded or item.is_collapsed) ? 'dropdown-toggle',
  ]
  %}
  {%
    set toggle_class = [
  ]
  %}
  <li{{ item.attributes.addClass(list_item_classes) }}>
    {% if menu_level == 0 and item.below %}
      {{ link(item.title, item.url, { 'class': link_class, 'data-toggle' : 'dropdown', 'title': ('Expand menu' | t) ~ ' ' ~ item.title }) }}
      {{ menus.build_menu(item.below, attributes, menu_level + 1) }}
    {% else %}
      {{ link(item.title, item.url, { 'class': link_class }) }}
    {% endif %}
  </li>
{% endmacro %}
